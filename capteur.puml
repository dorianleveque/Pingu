@startuml

class Sim {
  + update(dt)
}

class Actor {
  + update(dt)
  + subscribe(zone de d√©tection)
  + getAwarness()
}

class Trigger <<abstract>> {
  + eval()
  + onObjectEntered()
  + onObjectLeaved()
  + onObjectStayed()
}

class Nimbus { 
  + eval() 
}
class Focus { 
  + eval()
}
class Area { 
  + eval()
}


class THREE.Object3d {
  + position
}



class RegionTrigger {
  + object3d
  + test(Actor)
}

class RegionTriggerBox {
  + object3d
  + test(Actor)
}

class RegionTriggerAngularArea {
  + object3d
  + test(Actor)
}

class RegionTriggerSphere {
  + object3d
  + test(Actor)
}

class RegionTriggerCylinder {
  + object3d
  + test(Actor)
}

Sim "1" *-up- "*" Actor: actors
Sim "1" *--right-- "*" Trigger: triggers

Actor "1" -left-- "1" THREE.Object3d: object3d
Actor "*" --- "1" Trigger: observators
Actor "*" --- "1" Trigger: observes

THREE.Object3d <|-- Trigger
Trigger <|-- Nimbus
Trigger <|-- Focus
Trigger <|-- Area 

Trigger "1" *-right- "1" RegionTrigger: region 

RegionTrigger <|-- RegionTriggerBox
RegionTrigger <|-- RegionTriggerSphere
RegionTrigger <|-- RegionTriggerCylinder
RegionTrigger <|-- RegionTriggerAngularArea
@enduml